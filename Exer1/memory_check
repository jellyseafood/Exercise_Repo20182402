#!/bin/bash
# Written By: Nestor B. Gramata Jr.
# Created: 20180225
# This program monitors server memory usage and notifies a user via email 
#    only when utility is above set critical threshold
# Program has 3 parameters:
#   1. -c: critical threshold (percentage)
#   2. -w: warning threshold (percentage)
#   3. -e: email address to notify  

# clear the values of the following vars
unset crit_thresh
unset warn_thresh
unset email_add


#=========START functions / subroutines==========
# Function: my_help ()
# -- display to help user understand how to use program
function my_help () {
  echo "Invalid/Incomplete parameters..."
  echo "The required parameters are:"
  echo "  -c    critical threshold \(percentage\) -whole numbers only"
  echo "  -w    warning threshold \(percentage\) -whole numbers only"
  echo "  -e    email address to notify"
  echo "Note on parameters:"
  echo "  -c  should be greater than -w"
  echo "Sample invocation:"
  echo "  ./memory_check -c 90 -w 60 -e email@mine.com"
  echo "  ./memory_check -e email@mine -w 60 -c 90"
  echo "Your current inputs are:"
  echo "  c = $crit_thresh"
  echo "  w = $warn_thresh"
  echo "  e = $email_add"
}

# Function: get_perc_used_mem ()
# -- returns percentage memory usage
function get_perc_used_mem () {
  total_memory=$( free | grep Mem: | awk '{ print $2 }' )
  used_memory=$( free | grep buffers/cache | awk '{ print $3 }' )
  echo $( expr $used_memory \* 100 / $total_memory )
}

# Function: notify_action (user_email)
# -- sets the email subject to "YYYYMMDD HH:MM memory check - critical"
# -- set email body to contain the top 10 memory consuming processes
# -- sends an email to email_add provided
function notify_action () {
  email_add=$1
  email_subj="$( date "+%Y%m%d %H:%M" ) memory check - critical"
  # used awk as workaround to skip the header column when sorting
  # used sed to make the email look more aligned without having to use html
  email_body=\<html\>$( ps -eo pmem,pid,comm | awk 'NR==1{print}{print | "sort -grk1 | head -n10"}' | sed 's/^  *//; s/^/<tr><td>/; s/$/<\/td><\/tr>/; s/  */<\/td><td>/1; s/  */<\/td><td>/1' )\</html\>
  #email_body=$( ps -eo pmem,pid,comm | awk 'NR==1{print}{print | "sort -grk1 | head -n10"}' | sed 's/^ //' | sed "s/ \+/		/1 ; s/ \+/		/1" )
  #below assumes that server has mailx installed and smtp settings are configured
  echo "content-type: text/html $email_body" > temp.tmp
  #echo "$email_body" | mail -v -s "$email_subj" "$1"
  mail -v -s "$email_subj content-type: text/html" "$1" < temp.tmp
}
#=========END functions / subroutines==========


#=========START Main==========
# Get 3 named arguments
#   1. -c: critical threshold
#   2. -w: warning threshold
#   3. -e: email add
while getopts 'c:w:e:' OPTION; do
  case "$OPTION" in
    c)
      crit_thresh="$OPTARG"
      ;;
    w)
      warn_thresh="$OPTARG"
      ;;
    e)
      email_add="$OPTARG"
      ;;
    ?)
      ;;
  esac
done

# check for missing parameters or
#   or if warning threshold is greater than or equal to critical threshold
if [ -z "$crit_thresh" ] \
  || [ -z "$warn_thresh" ] \
  || [ -z "$email_add" ] \
  ||[ $warn_thresh -ge $crit_thresh ];
then
  my_help
  exit 99
fi

# Calculate percentage used memory
perc_used_mem=$( get_perc_used_mem )

# Verify calculations (for testing)
echo Percent Usage: $perc_used_mem

# used memory greater than or equal to critical threshold
if [ "$perc_used_mem" -ge "$crit_thresh" ];
then
  notify_action "$email_add"
  exit 2
fi

# used memory greater than or equal to warning threshold
if [ "$perc_used_mem" -ge "$warn_thresh" ];
then
  exit 1
fi

# used memory less than warning threshold
exit 0
#=========END Main==========